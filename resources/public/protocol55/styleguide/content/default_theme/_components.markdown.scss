///*----------------------------------*\
//  #MARKDOWN
//\*----------------------------------*/

// Markdown
//
// Displays the un-classed elements generated by markdown using the theme
// typographic styles.
//
// markup:
//  <div class="c-psg-markdown">
//    <h1>Heading 1</h1>
//    <h2>Heading 2</h2>
//    <h3>Heading 3</h3>
//    <h4>Heading 4</h4>
//    <h5>Heading 5</h5>
//    <h6>Heading 6</h6>
//    <pre>
//      <code class="bash">cljs -m protocol55.styleguide.main -s resources/ --css styles.css</code>
//    </pre>
//    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod
//    tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim
//    veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea
//    commodo consequat. Duis aute irure dolor in reprehenderit in voluptate
//    velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat
//    cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id
//    est laborum.</p>
//    <p>
//      <code>doseq</code>
//      <a href="https://clojuredocs.org/clojure.core/doseq">link</a>
//    </p>
//    <table>
//      <thead>
//        <tr>
//          <th>Symbol</th>
//          <th>Signature</th>
//          <th>Description</th>
//        </tr>
//      </thead>
//      <tbody>
//        <tr>
//          <td>take</td>
//          <td><code>(take n)</code> <code>(take n coll)</code></td>
//          <td>Returns a lazy sequence of the first n items in coll, or all
//          items if there are fewer than n.  Returns a stateful transducer when
//          no collection is provided.</td>
//        </tr>
//        <tr>
//          <td>drop</td>
//          <td><code>(drop n)</code> <code>(drop n coll)</code></td>
//          <td>Returns a lazy sequence of all but the first n items in coll.
//          Returns a stateful transducer when no collection is provided.</td>
//        </tr>
//      </tbody>
//    </table>
//  </div>
//
// Styleguide Components.Markdown

.c-psg-markdown {
  h1 {
    @include t-psg-heading-block;
  }

  h2 {
    @include t-psg-title-block;
  }

  h3 {
    @include t-psg-subtitle-block;
  }

  h4,
  h5,
  h6,
  ul,
  ol {
    @include t-psg-body-block;
  }

  ol,
  ul {
    padding-left: 1.5em;
  }

  ul ul,
  ol ol {
    margin-top: 0;
    margin-bottom: 0;
  }

  a {
    color: $psg-text-color;
  }

  blockquote,
  h1:first-of-type ~ p {
    @include t-psg-intro-block;
  }

  h2:first-of-type ~ p {
    @include t-psg-body-block;
  }

  hr {
    @include t-psg-rule;
  }

  code {
    @include t-psg-code-text;
    white-space: nowrap;
    font-size: .75em;
    display: inline-block;
    padding: .145em .5em;
    border-radius: 3px;
  }

  pre code {
    @include t-psg-code-block;
    border-radius: 3px;
    position: relative;

    &[class]::before {
      content: "lang: " attr(class);
      position: absolute;
      top: 0;
      right: 0;
      display: block;
      border: 1px solid white;
      border-bottom-left-radius: 3px;
      background: white;
      padding: .25em .5em;
      font-size: .75em;
    }
  }

  table {
    width: 100%;
    border-collapse: collapse;

    th {
      padding: .5em 1em;
    }

    td {
      padding: 1em;
    }

    th,
    td {
      @include t-psg-rule;

      &:first-child {
        padding-left: 0;
      }

      &:last-child {
        padding-right: 0;
      }
    }

    th {
      @include t-psg-subtitle-text($font-size: 12px);
      text-align: left;
    }

    td {
      @include t-psg-body-text;
    }
  }
}
